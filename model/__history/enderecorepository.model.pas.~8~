unit enderecorepository.model;

interface

uses endereco.model, conexao.model, System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Param;

type
  TEnderecoRepository = class
  public
    function Inserir(QryCep: TFDQuery; FEndereco: TEndereco; out sErro: string): Boolean;
    function GetEnderecoCEP(Cep: string): TEndereco;
    function GetEnderecoDados(Logradouro, Cidade, Estado: string): TEndereco;


  end;

implementation

{ TEnderecoRepository }


function TEnderecoRepository.Inserir(QryCep: TFDQuery; FEndereco: TEndereco; out sErro: string): Boolean;
begin
  with QryCep, FEndereco do
  begin
    Close;
    SQL.Clear;
    SQL.Add('insert into tab_cep(');
    SQL.Add('cep, ');
    SQL.Add('logradouro, ');
    SQL.Add('complemento, ');
    SQL.Add('bairro, ');
    SQL.Add('localidade, ');
    SQL.Add('uf) ');
    SQL.Add('values (:cep, ');
    SQL.Add(':logradouro, ');
    SQL.Add(':complemento, ');
    SQL.Add(':bairro, ');
    SQL.Add(':localidade, ');
    SQL.Add(':uf)');

    ParamByName('CEP').AsString := Cep;
    ParamByName('LOGRADOURO').AsString := Logradouro;
    ParamByName('COMPLEMENTO').AsString := Complemento;
    ParamByName('BAIRRO').AsString := Bairro;
    ParamByName('LOCALIDADE').AsString := Localidade;
    ParamByName('UF').AsString := UF;

    try
      Prepared := True;
      ExecSQL;
      Result := True;
    except
      on E: Exception do
      begin
        sErro := 'Ocorreu um erro ao inserir um novo CEP!' + sLineBreak + E.Message;
        raise;
      end;
    end;
  end;
end;

function TEnderecoRepository.GetEnderecoCEP(Cep: string): TEndereco;
begin
//
end;

function TEnderecoRepository.GetEnderecoDados(Logradouro, Cidade, Estado: string): TEndereco;
begin
//
end;

end.
